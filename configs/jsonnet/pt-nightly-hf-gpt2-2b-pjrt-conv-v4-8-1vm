{
   "accelerator": {
      "name": "v4-8",
      "numCores": 4,
      "replicas": 1,
      "size": 8,
      "type": "tpu",
      "variant": "",
      "version": 4
   },
   "command": [
      "/bin/bash",
      "-c",
      "set -u\nset -e\nset -x\n\n'python3' \\\n'examples/pytorch/xla_spawn.py' \\\n'--num_cores=4' \\\n'examples/pytorch/language-modeling/run_clm.py' \\\n'--num_train_epochs=3' \\\n'--dataset_name=wikitext' \\\n'--dataset_config_name=wikitext-2-raw-v1' \\\n'--per_device_train_batch_size=8 ' \\\n'--per_device_eval_batch_size=8 ' \\\n'--do_train' \\\n'--do_eval' \\\n'--logging_dir=./tensorboard-metrics' \\\n'--cache_dir=./cache_dir' \\\n'--output_dir=/tmp/test-clm' \\\n'--overwrite_output_dir' \\\n'--cache_dir=/tmp' \\\n'--config_name=/home/xl-ml-test/transformers/examples/pytorch/language-modeling/my_config_2.json' \\\n'--tokenizer_name=gpt2' \\\n'--block_size=1024' \\\n'--optim=adafactor' \\\n'--adafactor=true' \\\n'--save_strategy=no' \\\n'--logging_strategy=no' \\\n'--fsdp=full_shard' \\\n'--fsdp_config=examples/pytorch/language-modeling/fsdp_config.json'\ngsutil -m cp -r /tmp/test-clm/*.json $(MODEL_DIR)\n\n\n"
   ],
   "configMaps": [
      "gcs-buckets",
      "pytorch-nfs-ip"
   ],
   "cpu": 1,
   "entrypoint": [
      "bash",
      "-cxue",
      "if [[ ! -z \"$(KUBE_GOOGLE_CLOUD_TPU_ENDPOINTS)\" ]]; then\n  # Trim grpc:// prefix\n  export XRT_TPU_CONFIG=\"tpu_worker;0;${KUBE_GOOGLE_CLOUD_TPU_ENDPOINTS:7}\"\nfi\n\n# Run whatever is in `command` here\ndocker-entrypoint.sh \"${@:0}\"\n"
   ],
   "frameworkPrefix": "pt-nightly",
   "image": "us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/xla",
   "imageTag": "nightly_3.7",
   "labels": {
      "accelerator": "v4-8",
      "benchmarkId": "pt-nightly-hf-gpt2-2b-pjrt-conv-v4-8-1vm",
      "frameworkVersion": "pt-nightly",
      "mode": "conv",
      "model": "hf-gpt2-2b-pjrt"
   },
   "memory": "2Gi",
   "metricConfig": {
      "sources": [
         {
            "tensorboard": {
               "aggregate_assertions": [
                  {
                     "assertion": {
                        "inclusive_bounds": false,
                        "std_devs_from_mean": {
                           "comparison": "LESS",
                           "std_devs": 5
                        },
                        "wait_for_n_data_points": 10
                     },
                     "strategy": "FINAL",
                     "tag": "ExecuteTime__Percentile_99_sec"
                  },
                  {
                     "assertion": {
                        "inclusive_bounds": true,
                        "std_devs_from_mean": {
                           "comparison": "LESS",
                           "std_devs": 0
                        },
                        "wait_for_n_data_points": 0
                     },
                     "strategy": "FINAL",
                     "tag": "aten_ops_sum"
                  },
                  {
                     "assertion": {
                        "fixed_value": {
                           "comparison": "LESS",
                           "value": 7
                        },
                        "inclusive_bounds": false,
                        "wait_for_n_data_points": 0
                     },
                     "strategy": "FINAL",
                     "tag": "eval/loss"
                  }
               ],
               "exclude_tags": [
                  "LearningRate"
               ],
               "include_tags": [
                  {
                     "strategies": [
                        "FINAL"
                     ],
                     "tag_pattern": "*"
                  }
               ],
               "merge_runs": true
            }
         }
      ]
   },
   "mode": "conv",
   "modelName": "hf-gpt2-2b-pjrt",
   "outputBucket": "$(OUTPUT_BUCKET)",
   "schedule": "0 6 * * 0,5",
   "testName": "pt-nightly-hf-gpt2-2b-pjrt-conv-v4-8-1vm",
   "timeout": 3600,
   "tpuSettings": {
      "preemptible": false,
      "requireTpuAvailableLabel": true,
      "reserved": "false",
      "softwareVersion": "tpu-ubuntu2204-base",
      "tpuVmCreateSleepSeconds": 90,
      "tpuVmDockerArgs": "",
      "tpuVmExports": "export PJRT_DEVICE=TPU_C_API\ncd transformers/\nexport LD_LIBRARY_PATH=/usr/local/lib/\nexport PT_XLA_DEBUG=0\nexport USE_TORCH=ON\n",
      "tpuVmExtraSetup": "pip install --upgrade accelerate\ngit clone https://github.com/huggingface/transformers.git\ncd transformers\ngit checkout ebdb185befaa821304d461ed6aa20a17e4dc3aa2\npip install .\ngit log -1\npip install datasets evaluate scikit-learn\ngsutil cp -r gs://cloud-tpu-tpuvm-artifacts/config/xl-ml-test/pytorch/gpt2/my_config_*.json examples/pytorch/language-modeling/\ngsutil cp gs://cloud-tpu-tpuvm-artifacts/config/xl-ml-test/pytorch/gpt2/fsdp_config.json examples/pytorch/language-modeling/\n",
      "tpuVmMainCommandWorkers": "all",
      "tpuVmPytorchSetup": "pip3 install -U setuptools\n# `unattended-upgr` blocks us from installing apt dependencies\nsudo systemctl stop unattended-upgrades\nsudo apt-get -y update\nsudo apt install -y libopenblas-base\n# for huggingface tests\nsudo apt install -y libsndfile-dev\npip3 install --user --pre torch torchvision --index-url https://download.pytorch.org/whl/nightly/cpu\npip install --user \\\n  'torch_xla[tpuvm] @ https://storage.googleapis.com/pytorch-xla-releases/wheels/tpuvm/torch_xla-nightly-cp310-cp310-linux_x86_64.whl'\npip3 install pillow\ngit clone --depth=1 https://github.com/pytorch/pytorch.git\ncd pytorch\ngit clone https://github.com/pytorch/xla.git\n",
      "tpuVmStartupScript": "echo Running startup script",
      "tpuVmXlaDistPrefix": null
   },
   "volumeMap": {
      "datasets": null,
      "dshm": {
         "claim": {
            "emptyDir": {
               "medium": "Memory"
            }
         },
         "mountPath": "/dev/shm",
         "name": "dshm",
         "readOnly": false
      },
      "scripts": {
         "claim": {
            "emptyDir": {
               "medium": "Memory"
            }
         },
         "mountPath": "/scripts",
         "name": "scripts",
         "readOnly": false
      }
   }
}
