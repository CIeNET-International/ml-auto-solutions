{
   "accelerator": {
      "name": "v4-8",
      "numCores": 4,
      "replicas": 1,
      "size": 8,
      "type": "tpu",
      "variant": "",
      "version": 4
   },
   "command": [
      "bash",
      "-c",
      "set -x\nset -u\n\ncat > testsetup.sh << 'TEST_SCRIPT_EOF'\nset -x\nset -u\nset -e\n\n# .bash_logout sometimes causes a spurious bad exit code, remove it.\nrm .bash_logout\n\npip install --upgrade pip\ngit clone https://github.com/huggingface/transformers.git\ncd transformers && pip install .\npip install -r examples/flax/_tests_requirements.txt\npip install --upgrade huggingface-hub urllib3 zipp\n\npip install tensorflow\npip install jax[tpu] -f https://storage.googleapis.com/jax-releases/libtpu_releases.html\n\npip install -r examples/flax/language-modeling/requirements.txt\npython3 -c 'import flax; print(\"flax version:\", flax.__version__)'\nnum_devices=`python3 -c \"import jax; print(jax.device_count())\"`\nif [ \"$num_devices\" = \"1\" ]; then\n  echo \"No TPU devices detected\"\n  exit 1\nfi\n\n\ncd examples/flax/language-modeling\ngsutil cp -r gs://cloud-tpu-tpuvm-artifacts/config/xl-ml-test/jax/gpt2 .\n\npython3 run_clm_flax.py \\\n  --output_dir=./gpt2 \\\n  --model_type=gpt2 \\\n  --config_name=./gpt2 \\\n  --tokenizer_name=./gpt2 \\\n  --dataset_name=oscar \\\n  --dataset_config_name=unshuffled_deduplicated_no \\\n  --do_train \\\n  --do_eval \\\n  --block_size=512 \\\n  --learning_rate=5e-3 \\\n  --warmup_steps=1000 \\\n  --adam_beta1=0.9 \\\n  --adam_beta2=0.98 \\\n  --weight_decay=0.01 \\\n  --overwrite_output_dir \\\n  --num_train_epochs=1 \\\n  --logging_steps=500 \\\n  --eval_steps=2500 \\\n   --per_device_train_batch_size=64 --per_device_eval_batch_size=64\n\n\nTEST_SCRIPT_EOF\n\ngcloud alpha compute tpus tpu-vm ssh xl-ml-test@$(cat /scripts/tpu_name) \\\n--zone=$(cat /scripts/zone) \\\n--ssh-key-file=/scripts/id_rsa \\\n--strict-host-key-checking=no \\\n--internal-ip \\\n--worker=all \\\n--command \"$(cat testsetup.sh)\"\n\nexit_code=$?\nbash /scripts/cleanup.sh\nexit $exit_code\n"
   ],
   "configMaps": [
      "gcs-buckets"
   ],
   "cpu": 1,
   "entrypoint": null,
   "frameworkPrefix": "flax.latest",
   "image": "google/cloud-sdk",
   "imageTag": "latest",
   "labels": {
      "accelerator": "v4-8",
      "benchmarkId": "flax.latest-gpt2-oscar-func-v4-8-1vm",
      "frameworkVersion": "flax.latest",
      "mode": "func",
      "model": "gpt2-oscar"
   },
   "memory": "2Gi",
   "metricConfig": {
      "sources": [
         {
            "tensorboard": {
               "aggregate_assertions": [ ],
               "exclude_tags": [
                  "_hparams_/session_start_info"
               ],
               "include_tags": [
                  {
                     "strategies": [
                        "FINAL"
                     ],
                     "tag_pattern": "*"
                  }
               ],
               "merge_runs": true
            }
         }
      ]
   },
   "mode": "func",
   "outputBucket": "$(OUTPUT_BUCKET)",
   "runTest": "python3 run_clm_flax.py \\\n  --output_dir=./gpt2 \\\n  --model_type=gpt2 \\\n  --config_name=./gpt2 \\\n  --tokenizer_name=./gpt2 \\\n  --dataset_name=oscar \\\n  --dataset_config_name=unshuffled_deduplicated_no \\\n  --do_train \\\n  --do_eval \\\n  --block_size=512 \\\n  --learning_rate=5e-3 \\\n  --warmup_steps=1000 \\\n  --adam_beta1=0.9 \\\n  --adam_beta2=0.98 \\\n  --weight_decay=0.01 \\\n  --overwrite_output_dir \\\n  --num_train_epochs=1 \\\n  --logging_steps=500 \\\n  --eval_steps=2500 \\\n   --per_device_train_batch_size=64 --per_device_eval_batch_size=64\n",
   "schedule": "0 8 * * *",
   "setup": "pip install --upgrade pip\ngit clone https://github.com/huggingface/transformers.git\ncd transformers && pip install .\npip install -r examples/flax/_tests_requirements.txt\npip install --upgrade huggingface-hub urllib3 zipp\n\npip install tensorflow\npip install jax[tpu] -f https://storage.googleapis.com/jax-releases/libtpu_releases.html\n\npip install -r examples/flax/language-modeling/requirements.txt\npython3 -c 'import flax; print(\"flax version:\", flax.__version__)'\nnum_devices=`python3 -c \"import jax; print(jax.device_count())\"`\nif [ \"$num_devices\" = \"1\" ]; then\n  echo \"No TPU devices detected\"\n  exit 1\nfi\n\n\ncd examples/flax/language-modeling\ngsutil cp -r gs://cloud-tpu-tpuvm-artifacts/config/xl-ml-test/jax/gpt2 .\n",
   "testName": "flax.latest-gpt2-oscar-func-v4-8-1vm",
   "timeout": 7200,
   "tpuSettings": {
      "preemptible": true,
      "requireTpuAvailableLabel": true,
      "reserved": "false",
      "softwareVersion": "tpu-ubuntu2204-base",
      "tpuVmCreateSleepSeconds": 60,
      "tpuVmDockerArgs": "",
      "tpuVmStartupScript": "echo Running startup script"
   },
   "volumeMap": {
      "scripts": {
         "claim": {
            "emptyDir": {
               "medium": "Memory"
            }
         },
         "mountPath": "/scripts",
         "name": "scripts",
         "readOnly": false
      }
   }
}
