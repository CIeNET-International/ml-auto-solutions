{
   "accelerator": {
      "name": "v4-8",
      "numCores": 4,
      "replicas": 1,
      "size": 8,
      "type": "tpu",
      "variant": "",
      "version": 4
   },
   "command": [
      "python3",
      "stable-diffusion/main_tpu.py",
      "--train",
      "--no-test",
      "--base=stable-diffusion/configs/latent-diffusion/cin-ldm-vq-f8-ss.yaml",
      "--",
      "data.params.batch_size=32",
      "lightning.trainer.max_epochs=5",
      "model.params.first_stage_config.params.ckpt_path=stable-diffusion/models/first_stage_models/vq-f8/model.ckpt",
      "lightning.trainer.enable_checkpointing=False",
      "lightning.strategy.sync_module_states=False"
   ],
   "configMaps": [
      "gcs-buckets",
      "pytorch-nfs-ip"
   ],
   "cpu": 1,
   "entrypoint": [
      "bash",
      "-cxue",
      "if [[ ! -z \"$(KUBE_GOOGLE_CLOUD_TPU_ENDPOINTS)\" ]]; then\n  # Trim grpc:// prefix\n  export XRT_TPU_CONFIG=\"tpu_worker;0;${KUBE_GOOGLE_CLOUD_TPU_ENDPOINTS:7}\"\nfi\n\n# Run whatever is in `command` here\ndocker-entrypoint.sh \"${@:0}\"\n"
   ],
   "frameworkPrefix": "pt-nightly",
   "image": "us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/xla",
   "imageTag": "nightly_3.7",
   "labels": {
      "accelerator": "v4-8",
      "benchmarkId": "pt-nightly-lightning-sd-model-pjrt-func-v4-8-1vm",
      "frameworkVersion": "pt-nightly",
      "mode": "func",
      "model": "lightning-sd-model-pjrt"
   },
   "memory": "2Gi",
   "metricConfig": {
      "sources": [
         {
            "tensorboard": {
               "aggregate_assertions": [
                  {
                     "assertion": {
                        "inclusive_bounds": false,
                        "std_devs_from_mean": {
                           "comparison": "LESS",
                           "std_devs": 5
                        },
                        "wait_for_n_data_points": 10
                     },
                     "strategy": "FINAL",
                     "tag": "ExecuteTime__Percentile_99_sec"
                  },
                  {
                     "assertion": {
                        "inclusive_bounds": true,
                        "std_devs_from_mean": {
                           "comparison": "LESS",
                           "std_devs": 0
                        },
                        "wait_for_n_data_points": 0
                     },
                     "strategy": "FINAL",
                     "tag": "aten_ops_sum"
                  }
               ],
               "exclude_tags": [
                  "LearningRate"
               ],
               "include_tags": [
                  {
                     "strategies": [
                        "FINAL"
                     ],
                     "tag_pattern": "*"
                  }
               ],
               "merge_runs": true
            }
         }
      ]
   },
   "mode": "func",
   "modelName": "lightning-sd-model-pjrt",
   "outputBucket": "$(OUTPUT_BUCKET)",
   "schedule": "0 7 * * *",
   "testName": "pt-nightly-lightning-sd-model-pjrt-func-v4-8-1vm",
   "timeout": 10800,
   "tpuSettings": {
      "preemptible": false,
      "requireTpuAvailableLabel": true,
      "reserved": "false",
      "softwareVersion": "tpu-ubuntu2204-base",
      "tpuVmCreateSleepSeconds": 90,
      "tpuVmDockerArgs": "",
      "tpuVmExports": "export PJRT_DEVICE=TPU_C_API\n",
      "tpuVmExtraSetup": "git clone https://github.com/pytorch-tpu/stable-diffusion.git\ncd stable-diffusion\npip install transformers==4.19.2 diffusers invisible-watermark\npip install -e .\npip install torchmetrics==0.7.0\npip install https://github.com/Lightning-AI/lightning/archive/refs/heads/master.zip -U\npip install lmdb einops omegaconf\npip install taming-transformers clip kornia==0.6 albumentations==0.4.3\npip install starlette==0.27.0 && pip install tensorboard\nsudo apt-get update -y && sudo apt-get install libgl1 -y\n# wget -nv https://github.com/CompVis/taming-transformers/blob/master/taming/modules/vqvae/quantize.py\npip install -e git+https://github.com/CompVis/taming-transformers.git@master#egg=taming-transformers\necho w | pip install -e git+https://github.com/openai/CLIP.git@main#egg=clip\n# mv quantize.py ~/.local/lib/python3.8/site-packages/taming/modules/vqvae/\n\n# taming-transformers and CLIP override existing torch and torchvision so we need to reinstall\npip uninstall -y torch torchvision\npip3 install --user --pre torch torchvision --index-url https://download.pytorch.org/whl/nightly/cpu\npip install --user \\\n  'torch_xla[tpuvm] @ https://storage.googleapis.com/pytorch-xla-releases/wheels/tpuvm/torch_xla-nightly-cp310-cp310-linux_x86_64.whl'\n\n# Setup data\nwget -nv https://s3.amazonaws.com/fast-ai-imageclas/imagenette2.tgz\ntar -xf  imagenette2.tgz\nmkdir -p ~/.cache/autoencoders/data/ILSVRC2012_train/data\nmkdir -p ~/.cache/autoencoders/data/ILSVRC2012_validation/data\nmv imagenette2/train/*  ~/.cache/autoencoders/data/ILSVRC2012_train/data\nmv imagenette2/val/* ~/.cache/autoencoders/data/ILSVRC2012_validation/data\n\n# Get first stage model\nwget -nv -O models/first_stage_models/vq-f8/model.zip https://ommer-lab.com/files/latent-diffusion/vq-f8.zip\ncd  models/first_stage_models/vq-f8/\nunzip -o model.zip\ncd ~/stable-diffusion/\n\n# Fix syntax error\nsed -i 's/from torch._six import string_classes/string_classes = (str, bytes)/g' src/taming-transformers/taming/data/utils.py\n\n# Remove Checkpointing\nsed -i 's/trainer_kwargs\\[\"callbacks\"\\]/# trainer_kwargs\\[\"callbacks\"\\]/g' main_tpu.py\n\necho 'export PATH=~/.local/bin:$PATH' >> ~/.bash_profile\n",
      "tpuVmMainCommandWorkers": "all",
      "tpuVmPytorchSetup": "pip3 install -U setuptools\n# `unattended-upgr` blocks us from installing apt dependencies\nsudo systemctl stop unattended-upgrades\nsudo apt-get -y update\nsudo apt install -y libopenblas-base\n# for huggingface tests\nsudo apt install -y libsndfile-dev\npip3 install --user --pre torch torchvision --index-url https://download.pytorch.org/whl/nightly/cpu\npip install --user \\\n  'torch_xla[tpuvm] @ https://storage.googleapis.com/pytorch-xla-releases/wheels/tpuvm/torch_xla-nightly-cp310-cp310-linux_x86_64.whl'\npip3 install pillow\ngit clone --depth=1 https://github.com/pytorch/pytorch.git\ncd pytorch\ngit clone https://github.com/pytorch/xla.git\n",
      "tpuVmStartupScript": "echo Running startup script",
      "tpuVmXlaDistPrefix": null
   },
   "volumeMap": {
      "datasets": null,
      "dshm": {
         "claim": {
            "emptyDir": {
               "medium": "Memory"
            }
         },
         "mountPath": "/dev/shm",
         "name": "dshm",
         "readOnly": false
      },
      "scripts": {
         "claim": {
            "emptyDir": {
               "medium": "Memory"
            }
         },
         "mountPath": "/scripts",
         "name": "scripts",
         "readOnly": false
      }
   }
}
