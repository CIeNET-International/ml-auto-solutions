{
   "accelerator": {
      "name": "v4-8",
      "numCores": 4,
      "replicas": 1,
      "size": 8,
      "type": "tpu",
      "variant": "",
      "version": 4
   },
   "command": [
      "/bin/bash",
      "-c",
      "set -u\nset -e\nset -x\n\ngit clone https://github.com/huggingface/transformers.git\ncd transformers && pip install .\ngit log -1\npip install datasets evaluate scikit-learn\nsed '/torchvision/d' examples/pytorch/_tests_requirements.txt > no_vision_require.txt\npip install -r no_vision_require.txt\n\n'python3' \\\n'examples/pytorch/xla_spawn.py' \\\n'--num_cores=4' \\\n'examples/pytorch/text-classification/run_glue.py' \\\n'--model_name_or_path=distilbert-base-uncased' \\\n'--logging_dir=./tensorboard-metrics' \\\n'--task_name=MNLI' \\\n'--cache_dir=./cache_dir' \\\n'--do_train=true' \\\n'--do_eval=true' \\\n'--num_train_epochs=3' \\\n'--max_seq_length=128' \\\n'--learning_rate=3e-5' \\\n'--output_dir=MNLI' \\\n'--overwrite_output_dir=true' \\\n'--logging_steps=30' \\\n'--save_steps=3000' \\\n'--overwrite_cache=true' \\\n'--debug=tpu_metrics_debug' \\\n'--per_device_train_batch_size=512 ' \\\n'--per_device_eval_batch_size=512 '\ngsutil -m cp -r ./tensorboard-metrics/* $(MODEL_DIR)\n\n\n"
   ],
   "configMaps": [
      "gcs-buckets",
      "pytorch-nfs-ip"
   ],
   "cpu": 1,
   "entrypoint": [
      "bash",
      "-cxue",
      "if [[ ! -z \"$(KUBE_GOOGLE_CLOUD_TPU_ENDPOINTS)\" ]]; then\n  # Trim grpc:// prefix\n  export XRT_TPU_CONFIG=\"tpu_worker;0;${KUBE_GOOGLE_CLOUD_TPU_ENDPOINTS:7}\"\nfi\n\n# Run whatever is in `command` here\ndocker-entrypoint.sh \"${@:0}\"\n"
   ],
   "frameworkPrefix": "pt-2.1",
   "image": "us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/xla",
   "imageTag": "r2.1.0_3.8",
   "labels": {
      "accelerator": "v4-8",
      "benchmarkId": "pt-2.1-hf-glue-pjrt-conv-v4-8-1vm",
      "frameworkVersion": "pt-2.1",
      "mode": "conv",
      "model": "hf-glue-pjrt"
   },
   "memory": "2Gi",
   "metricConfig": {
      "sources": [
         {
            "tensorboard": {
               "aggregate_assertions": [
                  {
                     "assertion": {
                        "inclusive_bounds": false,
                        "std_devs_from_mean": {
                           "comparison": "LESS",
                           "std_devs": 5
                        },
                        "wait_for_n_data_points": 10
                     },
                     "strategy": "FINAL",
                     "tag": "ExecuteTime__Percentile_99_sec"
                  },
                  {
                     "assertion": {
                        "inclusive_bounds": true,
                        "std_devs_from_mean": {
                           "comparison": "LESS",
                           "std_devs": 0
                        },
                        "wait_for_n_data_points": 0
                     },
                     "strategy": "FINAL",
                     "tag": "aten_ops_sum"
                  },
                  {
                     "assertion": {
                        "fixed_value": {
                           "comparison": "GREATER",
                           "value": 0.69999999999999996
                        },
                        "inclusive_bounds": false,
                        "wait_for_n_data_points": 0
                     },
                     "strategy": "FINAL",
                     "tag": "eval/accuracy"
                  }
               ],
               "exclude_tags": [
                  "LearningRate"
               ],
               "include_tags": [
                  {
                     "strategies": [
                        "FINAL"
                     ],
                     "tag_pattern": "*"
                  }
               ],
               "merge_runs": true
            }
         }
      ]
   },
   "mode": "conv",
   "modelName": "hf-glue-pjrt",
   "outputBucket": "$(OUTPUT_BUCKET)",
   "schedule": "0 6 * * 0,5",
   "testName": "pt-2.1-hf-glue-pjrt-conv-v4-8-1vm",
   "timeout": 7200,
   "tpuSettings": {
      "preemptible": false,
      "requireTpuAvailableLabel": true,
      "reserved": "false",
      "softwareVersion": "tpu-ubuntu2204-base",
      "tpuVmCreateSleepSeconds": 90,
      "tpuVmDockerArgs": "",
      "tpuVmExports": "export PJRT_DEVICE=TPU_C_API\nexport XLA_USE_BF16=$(XLA_USE_BF16)\n",
      "tpuVmExtraSetup": "echo No extra setup required.\n",
      "tpuVmMainCommandWorkers": "all",
      "tpuVmPytorchSetup": "pip3 install -U setuptools\n# `unattended-upgr` blocks us from installing apt dependencies\nsudo systemctl stop unattended-upgrades\nsudo apt-get -y update\nsudo apt install -y libopenblas-base\n# for huggingface tests\nsudo apt install -y libsndfile-dev\n# TODO change back to torch2.1 once pytorch released torch2.1\npip install --user --pre --no-deps torch torchvision --extra-index-url https://download.pytorch.org/whl/test/cpu\npip install https://storage.googleapis.com/pytorch-xla-releases/wheels/tpuvm/torch_xla-2.1.0-cp310-cp310-manylinux_2_28_x86_64.whl\npip install torch_xla[tpu] -f https://storage.googleapis.com/libtpu-releases/index.html\npip3 install pillow\npip3 install typing_extensions\npip3 install sympy\ngit clone --depth=1 -b release/2.1 https://github.com/pytorch/pytorch.git\ncd pytorch\ngit clone -b r2.1 https://github.com/pytorch/xla.git\n",
      "tpuVmStartupScript": "echo Running startup script",
      "tpuVmXlaDistPrefix": null
   },
   "volumeMap": {
      "datasets": null,
      "dshm": {
         "claim": {
            "emptyDir": {
               "medium": "Memory"
            }
         },
         "mountPath": "/dev/shm",
         "name": "dshm",
         "readOnly": false
      },
      "scripts": {
         "claim": {
            "emptyDir": {
               "medium": "Memory"
            }
         },
         "mountPath": "/scripts",
         "name": "scripts",
         "readOnly": false
      }
   }
}
